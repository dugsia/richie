#!/usr/bin/env bash
set -eo pipefail

function usage_ssl() {
    echo -e "Usage: ${0} [OPTIONS] COMMAND

Utility function to easily enable/disable tls on Nginx reverse proxy
used for development purpose.

OPTIONS:
  -h, --help   print this message

COMMAND:
  setup             setup TLS configuration. (use --help to see all options)
  help              print this message
"
}

function usage_setup() {
    echo -e "Usage: ${0} ${1} [OPTIONS] COMMAND

Generate certificate and its key (except if you specified you do not want with --no-cert option)
then generate Nginx SSL configuration file.

OPTIONS:
  -nc, --no-cert   skip certificate generation with mkcert
  -h, --help       print this message

COMMAND:
  help              print this message
"
}

# Utility function to generate certificate and
# nginx configuration to reverse proxy richie app over https
function setup() {
  with_cert=true

  while true; do
    case "${1}" in
      -nc|--no-cert)
        with_cert=false
        break
        ;;
      -h | --help | help)
        usage_setup "${FUNCNAME[0]}"
        exit 0
        ;;
      *)
        break
        ;;
    esac
  done

  if "$with_cert" = true ; then
    echo "> Generate certificate for richie.local.dev domain"
    # Generate fresh key and certificate files for richie.local.dev domain
    mkcert -key-file "docker/files/etc/nginx/ssl/richie.local.dev.key" \
          -cert-file "docker/files/etc/nginx/ssl/richie.local.dev.pem" \
          richie.local.dev
  else
    echo "> Certificate generation skipped."
    echo -e "\\n\033[1;33m⚠️  A certificate is required!
Skipping generation supposes that you generated manualy your certificate and its key, named them richie.local.dev.*
then you put them in docker/files/etc/nginx/ssl directory.\033[0m
"
  fi

  echo "> Generate nginx configuration"

  nginx_base_template="docker/files/etc/nginx/conf.d/default.conf"
  nginx_ssl_template="docker/files/etc/nginx/ssl/ssl.conf.tpl"

  disclaimer="# /!\ DO NOT EDIT: this file is autogenerated"
  printf "%s\n" "${disclaimer}" > "docker/files/etc/nginx/ssl/default.conf"

  # Replace listen 8070; in default conf by ssl configuration then generate default.conf  
  sed "/listen 8070;/d; /server {/r $nginx_ssl_template" \
      ${nginx_base_template} \
      >> "docker/files/etc/nginx/ssl/default.conf"

  echo -e "\\n✅ SSL is ready to use! Restart containers with :"
  echo -e "\\n\033[1;31mmake run-ssl\\n"

  exit 0
}

while true; do
  case "${1}" in
    setup)
      "$@"
      exit 0
      ;;
    -h | --help | help | *)
      usage_ssl
      exit 0
      ;;
  esac
done
